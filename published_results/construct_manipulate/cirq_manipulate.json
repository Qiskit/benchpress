{
    "machine_info": {
        "node": "paul-linux",
        "processor": "x86_64",
        "machine": "x86_64",
        "python_compiler": "GCC 12.3.0",
        "python_implementation": "CPython",
        "python_implementation_version": "3.12.4",
        "python_version": "3.12.4",
        "python_build": [
            "main",
            "Jun 17 2024 10:23:07"
        ],
        "release": "6.5.0-45-generic",
        "system": "Linux",
        "cpu": {
            "python_version": "3.12.4.final.0 (64 bit)",
            "cpuinfo_version": [
                9,
                0,
                0
            ],
            "cpuinfo_version_string": "9.0.0",
            "arch": "X86_64",
            "bits": 64,
            "count": 24,
            "arch_string_raw": "x86_64",
            "vendor_id_raw": "AuthenticAMD",
            "brand_raw": "AMD Ryzen 9 7900 12-Core Processor",
            "hz_advertised_friendly": "545.0000 MHz",
            "hz_actual_friendly": "545.0000 MHz",
            "hz_advertised": [
                545000000,
                0
            ],
            "hz_actual": [
                545000000,
                0
            ],
            "stepping": 2,
            "model": 97,
            "family": 25,
            "flags": [
                "3dnowprefetch",
                "abm",
                "adx",
                "aes",
                "amd_lbr_v2",
                "aperfmperf",
                "apic",
                "arat",
                "avic",
                "avx",
                "avx2",
                "avx512_bf16",
                "avx512_bitalg",
                "avx512_vbmi2",
                "avx512_vnni",
                "avx512_vpopcntdq",
                "avx512bitalg",
                "avx512bw",
                "avx512cd",
                "avx512dq",
                "avx512f",
                "avx512ifma",
                "avx512vbmi",
                "avx512vbmi2",
                "avx512vl",
                "avx512vnni",
                "avx512vpopcntdq",
                "bmi1",
                "bmi2",
                "bpext",
                "cat_l3",
                "cdp_l3",
                "clflush",
                "clflushopt",
                "clwb",
                "clzero",
                "cmov",
                "cmp_legacy",
                "constant_tsc",
                "cpb",
                "cppc",
                "cpuid",
                "cqm",
                "cqm_llc",
                "cqm_mbm_local",
                "cqm_mbm_total",
                "cqm_occup_llc",
                "cr8_legacy",
                "cx16",
                "cx8",
                "dbx",
                "de",
                "decodeassists",
                "erms",
                "extapic",
                "extd_apicid",
                "f16c",
                "flush_l1d",
                "flushbyasid",
                "fma",
                "fpu",
                "fsgsbase",
                "fsrm",
                "fxsr",
                "fxsr_opt",
                "gfni",
                "ht",
                "hw_pstate",
                "ibpb",
                "ibrs",
                "ibrs_enhanced",
                "ibs",
                "invpcid",
                "irperf",
                "lahf_lm",
                "lbrv",
                "lm",
                "mba",
                "mca",
                "mce",
                "misalignsse",
                "mmx",
                "mmxext",
                "monitor",
                "movbe",
                "msr",
                "mtrr",
                "mwaitx",
                "nonstop_tsc",
                "nopl",
                "npt",
                "nrip_save",
                "nx",
                "ospke",
                "osvw",
                "osxsave",
                "overflow_recov",
                "pae",
                "pat",
                "pausefilter",
                "pci_l2i",
                "pclmulqdq",
                "pdpe1gb",
                "perfctr_core",
                "perfctr_llc",
                "perfctr_nb",
                "perfmon_v2",
                "pfthreshold",
                "pge",
                "pku",
                "pni",
                "popcnt",
                "pqe",
                "pqm",
                "pse",
                "pse36",
                "rapl",
                "rdpid",
                "rdpru",
                "rdrand",
                "rdrnd",
                "rdseed",
                "rdt_a",
                "rdtscp",
                "rep_good",
                "sep",
                "sha",
                "sha_ni",
                "skinit",
                "smap",
                "smca",
                "smep",
                "ssbd",
                "sse",
                "sse2",
                "sse4_1",
                "sse4_2",
                "sse4a",
                "ssse3",
                "stibp",
                "succor",
                "svm",
                "svm_lock",
                "syscall",
                "tce",
                "topoext",
                "tsc",
                "tsc_scale",
                "umip",
                "v_spec_ctrl",
                "v_vmsave_vmload",
                "vaes",
                "vgif",
                "vmcb_clean",
                "vme",
                "vmmcall",
                "vnmi",
                "vpclmulqdq",
                "wbnoinvd",
                "wdt",
                "x2avic",
                "xgetbv1",
                "xsave",
                "xsavec",
                "xsaveerptr",
                "xsaveopt",
                "xsaves"
            ],
            "l3_cache_size": 1048576,
            "l2_cache_size": 12582912,
            "l1_data_cache_size": 393216,
            "l1_instruction_cache_size": 393216,
            "l2_cache_line_size": 1024,
            "l2_cache_associativity": 6
        }
    },
    "commit_info": {
        "id": "fac7bda397e7f67883674051370eb38bab555e15",
        "time": "2024-08-16T09:41:57-04:00",
        "author_time": "2024-08-16T09:41:57-04:00",
        "dirty": false,
        "project": "benchpress",
        "branch": "main"
    },
    "benchmarks": [
        {
            "group": "Circuit manipulation",
            "name": "test_DTC100_twirling",
            "fullname": "cirq_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_DTC100_twirling",
            "params": null,
            "param": null,
            "extra_info": {
                "qasm_load_time": 5.211559973016847,
                "input_num_qubits": 100
            },
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 1,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 1.2207944709807634,
                "max": 1.2207944709807634,
                "mean": 1.2207944709807634,
                "stddev": 0,
                "rounds": 1,
                "median": 1.2207944709807634,
                "iqr": 0.0,
                "q1": 1.2207944709807634,
                "q3": 1.2207944709807634,
                "iqr_outliers": 0,
                "stddev_outliers": 0,
                "outliers": "0;0",
                "ld15iqr": 1.2207944709807634,
                "hd15iqr": 1.2207944709807634,
                "ops": 0.8191387033368678,
                "total": 1.2207944709807634,
                "iterations": 1
            }
        },
        {
            "group": "Circuit manipulation",
            "name": "test_multi_control_decompose",
            "fullname": "cirq_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_multi_control_decompose",
            "params": null,
            "param": null,
            "extra_info": {
                "output_num_qubits": 16,
                "output_circuit_operations": {
                    "_PauliX": 1,
                    "ZPowGate": 6072,
                    "YPowGate": 36652,
                    "CZPowGate": 17414,
                    "_PauliZ": 15,
                    "XPowGate": 1610,
                    "Ry": 14624
                },
                "output_gate_count_2q": 17414,
                "output_depth_2q": 15688
            },
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 1,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 1.6458770130411722,
                "max": 1.6458770130411722,
                "mean": 1.6458770130411722,
                "stddev": 0,
                "rounds": 1,
                "median": 1.6458770130411722,
                "iqr": 0.0,
                "q1": 1.6458770130411722,
                "q3": 1.6458770130411722,
                "iqr_outliers": 0,
                "stddev_outliers": 0,
                "outliers": "0;0",
                "ld15iqr": 1.6458770130411722,
                "hd15iqr": 1.6458770130411722,
                "ops": 0.607578811828867,
                "total": 1.6458770130411722,
                "iterations": 1
            }
        }
    ],
    "datetime": "2024-08-16T14:13:52.650733",
    "version": "4.0.0",
    "cirq_info": {
        "cirq": "1.4.1"
    },
    "total_duration": 82.48240900039673,
    "env_info": {
        "numpy": "1.26.4",
        "scipy": "1.14.0"
    },
    "test_status_counts": {
        "passed": 2,
        "failed": 2,
        "xfailed": 0,
        "skipped": 0
    },
    "test_dumps": {
        "passed": {
            "cirq_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_DTC100_twirling": {
                "duration": 9.892039494006895,
                "exception": "None",
                "keywords": {
                    "test_DTC100_twirling": 1,
                    "TestWorkoutCircuitManipulate": 1,
                    "benchmark": 1,
                    "test_manipulate.py": 1,
                    "manipulate": 1,
                    "cirq_gym": 1,
                    "benchpress": 1,
                    "": 1
                }
            },
            "cirq_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_multi_control_decompose": {
                "duration": 6.2911240109824575,
                "exception": "None",
                "keywords": {
                    "test_multi_control_decompose": 1,
                    "TestWorkoutCircuitManipulate": 1,
                    "benchmark": 1,
                    "test_manipulate.py": 1,
                    "manipulate": 1,
                    "cirq_gym": 1,
                    "benchpress": 1,
                    "": 1
                }
            }
        },
        "failed": {
            "cirq_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_QV100_basis_change": {
                "duration": 64.65631106903311,
                "exception": "self = <benchpress.cirq_gym.manipulate.test_manipulate.TestWorkoutCircuitManipulate object at 0x7f4c086f87a0>\nbenchmark = <pytest_benchmark.fixture.BenchmarkFixture object at 0x7f4c0763e6f0>\n\n    def test_QV100_basis_change(self, benchmark):\n        \"\"\"Change a QV100 circuit basis from [rx, ry, rz, cx]\n        to [sx, x, rz, cz]\n        \"\"\"\n        circ = qasm_circuit_loader(\n            Configuration.get_qasm_dir(\"qv\") + \"qv_N100_12345.qasm\", benchmark\n        )\n    \n>       @benchmark\n\nbenchpress/cirq_gym/manipulate/test_manipulate.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/pytest_benchmark/fixture.py:125: in __call__\n    return self._raw(function_to_benchmark, *args, **kwargs)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/pytest_benchmark/fixture.py:147: in _raw\n    duration, iterations, loops_range = self._calibrate_timer(runner)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/pytest_benchmark/fixture.py:275: in _calibrate_timer\n    duration = runner(loops_range)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/pytest_benchmark/fixture.py:90: in runner\n    function_to_benchmark(*args, **kwargs)\nbenchpress/cirq_gym/manipulate/test_manipulate.py:172: in result\n    out = cirq.optimize_for_target_gateset(circ, gateset=IBMTargetGateset())\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:379: in func_with_logging\n    return _transform_and_log(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:438: in _transform_and_log\n    transformed_circuit = _run_transformer_on_circuit(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:424: in _run_transformer_on_circuit\n    return func(mutable_circuit if mutable_circuit else circuit, **kwargs)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/optimize_for_target_gateset.py:151: in optimize_for_target_gateset\n    circuit = _decompose_operations_to_target_gateset(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:379: in func_with_logging\n    return _transform_and_log(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:438: in _transform_and_log\n    transformed_circuit = _run_transformer_on_circuit(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:424: in _run_transformer_on_circuit\n    return func(mutable_circuit if mutable_circuit else circuit, **kwargs)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/optimize_for_target_gateset.py:90: in _decompose_operations_to_target_gateset\n    return transformer_primitives.map_operations_and_unroll(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_primitives.py:305: in map_operations_and_unroll\n    return _map_operations_impl(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_primitives.py:212: in _map_operations_impl\n    mapped_ops = apply_map_func(op, idx)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_primitives.py:175: in apply_map_func\n    mapped_ops = [*ops.flatten_to_ops(map_func(op, idx))]\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/optimize_for_target_gateset.py:79: in map_func\n    return dp.decompose(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/protocols/decompose_protocol.py:310: in decompose\n    return [*_decompose_dfs(val, args)]\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/protocols/decompose_protocol.py:222: in _decompose_dfs\n    yield from _decompose_dfs(val, args)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/protocols/decompose_protocol.py:222: in _decompose_dfs\n    yield from _decompose_dfs(val, args)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/protocols/decompose_protocol.py:222: in _decompose_dfs\n    yield from _decompose_dfs(val, args)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/protocols/decompose_protocol.py:222: in _decompose_dfs\n    yield from _decompose_dfs(val, args)\nE   RecursionError: maximum recursion depth exceeded\n!!! Recursion detected (same locals & position)",
                "keywords": {
                    "test_QV100_basis_change": 1,
                    "TestWorkoutCircuitManipulate": 1,
                    "benchmark": 1,
                    "test_manipulate.py": 1,
                    "manipulate": 1,
                    "cirq_gym": 1,
                    "benchpress": 1,
                    "": 1
                }
            },
            "cirq_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_random_clifford_decompose": {
                "duration": 0.4285070219775662,
                "exception": "self = <benchpress.cirq_gym.manipulate.test_manipulate.TestWorkoutCircuitManipulate object at 0x7f4c084448c0>\nbenchmark = <pytest_benchmark.fixture.BenchmarkFixture object at 0x7f4bf4aca4e0>\n\n    def test_random_clifford_decompose(self, benchmark):\n        \"\"\"Decompose a random clifford into\n        basis [rz, sx, x, cz]\n        \"\"\"\n        circuit = qasm_circuit_loader(\n            Configuration.get_qasm_dir(\"clifford\") + \"clifford_20_12345.qasm\",\n            benchmark)\n    \n>       @benchmark\n\nbenchpress/cirq_gym/manipulate/test_manipulate.py:204: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/pytest_benchmark/fixture.py:125: in __call__\n    return self._raw(function_to_benchmark, *args, **kwargs)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/pytest_benchmark/fixture.py:147: in _raw\n    duration, iterations, loops_range = self._calibrate_timer(runner)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/pytest_benchmark/fixture.py:275: in _calibrate_timer\n    duration = runner(loops_range)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/pytest_benchmark/fixture.py:90: in runner\n    function_to_benchmark(*args, **kwargs)\nbenchpress/cirq_gym/manipulate/test_manipulate.py:206: in result\n    out = cirq.optimize_for_target_gateset(circuit, gateset=IBMTargetGateset())\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:379: in func_with_logging\n    return _transform_and_log(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:438: in _transform_and_log\n    transformed_circuit = _run_transformer_on_circuit(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:424: in _run_transformer_on_circuit\n    return func(mutable_circuit if mutable_circuit else circuit, **kwargs)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/optimize_for_target_gateset.py:151: in optimize_for_target_gateset\n    circuit = _decompose_operations_to_target_gateset(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:379: in func_with_logging\n    return _transform_and_log(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:438: in _transform_and_log\n    transformed_circuit = _run_transformer_on_circuit(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_api.py:424: in _run_transformer_on_circuit\n    return func(mutable_circuit if mutable_circuit else circuit, **kwargs)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/optimize_for_target_gateset.py:90: in _decompose_operations_to_target_gateset\n    return transformer_primitives.map_operations_and_unroll(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_primitives.py:305: in map_operations_and_unroll\n    return _map_operations_impl(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_primitives.py:212: in _map_operations_impl\n    mapped_ops = apply_map_func(op, idx)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/transformer_primitives.py:175: in apply_map_func\n    mapped_ops = [*ops.flatten_to_ops(map_func(op, idx))]\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/transformers/optimize_for_target_gateset.py:79: in map_func\n    return dp.decompose(\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/protocols/decompose_protocol.py:310: in decompose\n    return [*_decompose_dfs(val, args)]\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/protocols/decompose_protocol.py:222: in _decompose_dfs\n    yield from _decompose_dfs(val, args)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/protocols/decompose_protocol.py:222: in _decompose_dfs\n    yield from _decompose_dfs(val, args)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/protocols/decompose_protocol.py:222: in _decompose_dfs\n    yield from _decompose_dfs(val, args)\n../../../miniforge3/envs/cirq/lib/python3.12/site-packages/cirq/protocols/decompose_protocol.py:222: in _decompose_dfs\n    yield from _decompose_dfs(val, args)\nE   RecursionError: maximum recursion depth exceeded\n!!! Recursion detected (same locals & position)",
                "keywords": {
                    "test_random_clifford_decompose": 1,
                    "TestWorkoutCircuitManipulate": 1,
                    "benchmark": 1,
                    "test_manipulate.py": 1,
                    "manipulate": 1,
                    "cirq_gym": 1,
                    "benchpress": 1,
                    "": 1
                }
            }
        },
        "xfailed": {},
        "skipped": {}
    }
}