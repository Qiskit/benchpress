{
    "machine_info": {
        "node": "paul-linux",
        "processor": "x86_64",
        "machine": "x86_64",
        "python_compiler": "GCC 12.3.0",
        "python_implementation": "CPython",
        "python_implementation_version": "3.12.4",
        "python_version": "3.12.4",
        "python_build": [
            "main",
            "Jun 17 2024 10:23:07"
        ],
        "release": "6.5.0-45-generic",
        "system": "Linux",
        "cpu": {
            "python_version": "3.12.4.final.0 (64 bit)",
            "cpuinfo_version": [
                9,
                0,
                0
            ],
            "cpuinfo_version_string": "9.0.0",
            "arch": "X86_64",
            "bits": 64,
            "count": 24,
            "arch_string_raw": "x86_64",
            "vendor_id_raw": "AuthenticAMD",
            "brand_raw": "AMD Ryzen 9 7900 12-Core Processor",
            "hz_advertised_friendly": "4.7161 GHz",
            "hz_actual_friendly": "4.7161 GHz",
            "hz_advertised": [
                4716080000,
                0
            ],
            "hz_actual": [
                4716080000,
                0
            ],
            "stepping": 2,
            "model": 97,
            "family": 25,
            "flags": [
                "3dnowprefetch",
                "abm",
                "adx",
                "aes",
                "amd_lbr_v2",
                "aperfmperf",
                "apic",
                "arat",
                "avic",
                "avx",
                "avx2",
                "avx512_bf16",
                "avx512_bitalg",
                "avx512_vbmi2",
                "avx512_vnni",
                "avx512_vpopcntdq",
                "avx512bitalg",
                "avx512bw",
                "avx512cd",
                "avx512dq",
                "avx512f",
                "avx512ifma",
                "avx512vbmi",
                "avx512vbmi2",
                "avx512vl",
                "avx512vnni",
                "avx512vpopcntdq",
                "bmi1",
                "bmi2",
                "bpext",
                "cat_l3",
                "cdp_l3",
                "clflush",
                "clflushopt",
                "clwb",
                "clzero",
                "cmov",
                "cmp_legacy",
                "constant_tsc",
                "cpb",
                "cppc",
                "cpuid",
                "cqm",
                "cqm_llc",
                "cqm_mbm_local",
                "cqm_mbm_total",
                "cqm_occup_llc",
                "cr8_legacy",
                "cx16",
                "cx8",
                "dbx",
                "de",
                "decodeassists",
                "erms",
                "extapic",
                "extd_apicid",
                "f16c",
                "flush_l1d",
                "flushbyasid",
                "fma",
                "fpu",
                "fsgsbase",
                "fsrm",
                "fxsr",
                "fxsr_opt",
                "gfni",
                "ht",
                "hw_pstate",
                "ibpb",
                "ibrs",
                "ibrs_enhanced",
                "ibs",
                "invpcid",
                "irperf",
                "lahf_lm",
                "lbrv",
                "lm",
                "mba",
                "mca",
                "mce",
                "misalignsse",
                "mmx",
                "mmxext",
                "monitor",
                "movbe",
                "msr",
                "mtrr",
                "mwaitx",
                "nonstop_tsc",
                "nopl",
                "npt",
                "nrip_save",
                "nx",
                "ospke",
                "osvw",
                "osxsave",
                "overflow_recov",
                "pae",
                "pat",
                "pausefilter",
                "pci_l2i",
                "pclmulqdq",
                "pdpe1gb",
                "perfctr_core",
                "perfctr_llc",
                "perfctr_nb",
                "perfmon_v2",
                "pfthreshold",
                "pge",
                "pku",
                "pni",
                "popcnt",
                "pqe",
                "pqm",
                "pse",
                "pse36",
                "rapl",
                "rdpid",
                "rdpru",
                "rdrand",
                "rdrnd",
                "rdseed",
                "rdt_a",
                "rdtscp",
                "rep_good",
                "sep",
                "sha",
                "sha_ni",
                "skinit",
                "smap",
                "smca",
                "smep",
                "ssbd",
                "sse",
                "sse2",
                "sse4_1",
                "sse4_2",
                "sse4a",
                "ssse3",
                "stibp",
                "succor",
                "svm",
                "svm_lock",
                "syscall",
                "tce",
                "topoext",
                "tsc",
                "tsc_scale",
                "umip",
                "v_spec_ctrl",
                "v_vmsave_vmload",
                "vaes",
                "vgif",
                "vmcb_clean",
                "vme",
                "vmmcall",
                "vnmi",
                "vpclmulqdq",
                "wbnoinvd",
                "wdt",
                "x2avic",
                "xgetbv1",
                "xsave",
                "xsavec",
                "xsaveerptr",
                "xsaveopt",
                "xsaves"
            ],
            "l3_cache_size": 1048576,
            "l2_cache_size": 12582912,
            "l1_data_cache_size": 393216,
            "l1_instruction_cache_size": 393216,
            "l2_cache_line_size": 1024,
            "l2_cache_associativity": 6
        }
    },
    "commit_info": {
        "id": "fac7bda397e7f67883674051370eb38bab555e15",
        "time": "2024-08-16T09:41:57-04:00",
        "author_time": "2024-08-16T09:41:57-04:00",
        "dirty": false,
        "project": "benchpress",
        "branch": "main"
    },
    "benchmarks": [
        {
            "group": "Circuit manipulation",
            "name": "test_DTC100_twirling",
            "fullname": "bqskit_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_DTC100_twirling",
            "params": null,
            "param": null,
            "extra_info": {
                "qasm_load_time": 3.1695875960285775,
                "input_num_qubits": 100
            },
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 1,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 1.3624374150531366,
                "max": 1.3624374150531366,
                "mean": 1.3624374150531366,
                "stddev": 0,
                "rounds": 1,
                "median": 1.3624374150531366,
                "iqr": 0.0,
                "q1": 1.3624374150531366,
                "q3": 1.3624374150531366,
                "iqr_outliers": 0,
                "stddev_outliers": 0,
                "outliers": "0;0",
                "ld15iqr": 1.3624374150531366,
                "hd15iqr": 1.3624374150531366,
                "ops": 0.7339786686355783,
                "total": 1.3624374150531366,
                "iterations": 1
            }
        },
        {
            "group": "Circuit manipulation",
            "name": "test_QV100_basis_change",
            "fullname": "bqskit_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_QV100_basis_change",
            "params": null,
            "param": null,
            "extra_info": {
                "qasm_load_time": 17.861516271019354,
                "input_num_qubits": 100
            },
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 1,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 175.62245762598468,
                "max": 175.62245762598468,
                "mean": 175.62245762598468,
                "stddev": 0,
                "rounds": 1,
                "median": 175.62245762598468,
                "iqr": 0.0,
                "q1": 175.62245762598468,
                "q3": 175.62245762598468,
                "iqr_outliers": 0,
                "stddev_outliers": 0,
                "outliers": "0;0",
                "ld15iqr": 175.62245762598468,
                "hd15iqr": 175.62245762598468,
                "ops": 0.005694032605611609,
                "total": 175.62245762598468,
                "iterations": 1
            }
        },
        {
            "group": "Circuit manipulation",
            "name": "test_random_clifford_decompose",
            "fullname": "bqskit_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_random_clifford_decompose",
            "params": null,
            "param": null,
            "extra_info": {
                "gate_count_2q": 2350,
                "depth_2q": 698
            },
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 1,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 20.178779592970386,
                "max": 20.178779592970386,
                "mean": 20.178779592970386,
                "stddev": 0,
                "rounds": 1,
                "median": 20.178779592970386,
                "iqr": 0.0,
                "q1": 20.178779592970386,
                "q3": 20.178779592970386,
                "iqr_outliers": 0,
                "stddev_outliers": 0,
                "outliers": "0;0",
                "ld15iqr": 20.178779592970386,
                "hd15iqr": 20.178779592970386,
                "ops": 0.04955701088822868,
                "total": 20.178779592970386,
                "iterations": 1
            }
        }
    ],
    "datetime": "2024-08-16T14:01:15.309364+00:00",
    "version": "4.0.0",
    "bqskit_info": {
        "bqskit": "1.1.2"
    },
    "total_duration": 832.4274253845215,
    "env_info": {
        "numpy": "2.0.1",
        "scipy": "1.14.0"
    },
    "test_status_counts": {
        "passed": 3,
        "failed": 0,
        "xfailed": 1,
        "skipped": 0
    },
    "test_dumps": {
        "passed": {
            "bqskit_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_DTC100_twirling": {
                "duration": 17.363486416987143,
                "exception": "None",
                "keywords": {
                    "test_DTC100_twirling": 1,
                    "TestWorkoutCircuitManipulate": 1,
                    "benchmark": 1,
                    "test_manipulate.py": 1,
                    "manipulate": 1,
                    "bqskit_gym": 1,
                    "benchpress": 1,
                    "": 1
                }
            },
            "bqskit_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_QV100_basis_change": {
                "duration": 730.8995141899795,
                "exception": "None",
                "keywords": {
                    "test_QV100_basis_change": 1,
                    "TestWorkoutCircuitManipulate": 1,
                    "benchmark": 1,
                    "test_manipulate.py": 1,
                    "manipulate": 1,
                    "bqskit_gym": 1,
                    "benchpress": 1,
                    "": 1
                }
            },
            "bqskit_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_random_clifford_decompose": {
                "duration": 82.99135580501752,
                "exception": "None",
                "keywords": {
                    "test_random_clifford_decompose": 1,
                    "TestWorkoutCircuitManipulate": 1,
                    "benchmark": 1,
                    "test_manipulate.py": 1,
                    "manipulate": 1,
                    "bqskit_gym": 1,
                    "benchpress": 1,
                    "": 1
                }
            }
        },
        "failed": {},
        "xfailed": {
            "bqskit_gym/manipulate/test_manipulate.py::TestWorkoutCircuitManipulate::test_multi_control_decompose": {
                "duration": 9.541399776935577e-05,
                "exception": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_and_report.<locals>.<lambda> at 0x702383d96c00>, when = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/_pytest/logging.py:842: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/_pytest/logging.py:831: in _runtest_for\n    yield\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/_pytest/capture.py:874: in pytest_runtest_setup\n    return (yield)\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitem = <Function test_multi_control_decompose>\n\n    @hookimpl(tryfirst=True)\n    def pytest_runtest_setup(item: Item) -> None:\n        skipped = evaluate_skip_marks(item)\n        if skipped:\n            raise skip.Exception(skipped.reason, _use_item_location=True)\n    \n        item.stash[xfailed_key] = xfailed = evaluate_xfail_marks(item)\n        if xfailed and not item.config.option.runxfail and not xfailed.run:\n>           xfail(\"[NOTRUN] \" + xfailed.reason)\nE           _pytest.outcomes.XFailed: [NOTRUN] Runs out of memory (128GB RAM) for 16Q MCX gate\n\n../../../miniforge3/envs/bqskit/lib/python3.12/site-packages/_pytest/skipping.py:244: XFailed",
                "keywords": {
                    "test_multi_control_decompose": 1,
                    "xfail": 1,
                    "pytestmark": 1,
                    "TestWorkoutCircuitManipulate": 1,
                    "benchmark": 1,
                    "test_manipulate.py": 1,
                    "manipulate": 1,
                    "bqskit_gym": 1,
                    "benchpress": 1,
                    "": 1
                }
            }
        },
        "skipped": {}
    }
}